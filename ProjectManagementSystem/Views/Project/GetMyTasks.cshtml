@model List<ProjectManagementSystem.Application.Abstractions.Task.Dto.TaskDto>
@{
    Layout = "_MainLayout";
}
<link rel="stylesheet" href="~/css/modal.css">
<style>
    button.action {
        background-color: #f0f0f0;
        border: none;
        padding: 6px 12px;
        border-radius: 4px;
        cursor: pointer;
        font-size: 13px;
    }

        button.action:hover {
            background-color: #e0e0e0;
        }
</style>


<main class="content">
    <div class="header">
        <div class="create-btn">
            <button style="background-color:white;">Nothing</button>
        </div>
        <div>
            <img src="/images/default_avatar.jpg" alt="User" class="member-avatar-circle">
        </div>
    </div>
    <div class="projects-section">
        <table>
            <thead>
                <tr>
                    <th>Task Name</th>
                    <th>Task Description</th>
                    <th>Task Priority</th>
                    <th>Task Status</th>
                    <th>Documentation</th>
                </tr>
            </thead>
            <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.TaskName</td>
                            <td>@item.TaskDesc</td>
                            <td>
                                @if (@item.Priority.ToString() == "Low")
                                {
                                    <span class="badge low">@item.Priority.ToString()</span>
                                }
                                else if (@item.Priority.ToString() == "Medium")
                                {
                                    <span class="badge medium">@item.Priority.ToString()</span>
                                }
                                else if (@item.Priority.ToString() == "High")
                                {
                                    <span class="badge high">@item.Priority.ToString()</span>
                                }
                            </td>
                            <td>@item.State.ToString()</td>
                            @if (item.Documentation == null)
                            {
                                <td colspan="2">
                                    <button class="open-doc-btn" data-taskid="@item.Id">Add Documentation</button>
                                </td>
                            }
                            else
                            {
                               <td>Documentation has been created</td>
                            }
                            
                        </tr>
                    }
            </tbody>
        </table>
    </div>
</main>


<div id="docModal" class="modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <form method="post" asp-action="CreateDocumentation" asp-controller="Documentation" class="doc-form">
            <input type="hidden" name="TaskId" id="modalTaskId">
            <input type="text" name="Header" placeholder="Header" required autocomplete="off">
            <input type="text" name="Text" placeholder="Text" required autocomplete="off">
            <button class="action" type="submit">Create</button>
        </form>
    </div>
</div>

<script>
    document.querySelectorAll('.open-doc-btn').forEach(button => {
        button.addEventListener('click', function () {
            var taskId = this.getAttribute('data-taskid');
            document.getElementById('modalTaskId').value = taskId;
            document.getElementById('docModal').style.display = 'block';
        });
    });

    document.querySelector('.close').addEventListener('click', function () {
        document.getElementById('docModal').style.display = 'none';
    });

    window.onclick = function (event) {
        if (event.target == document.getElementById('docModal')) {
            document.getElementById('docModal').style.display = 'none';
        }
    }
</script>