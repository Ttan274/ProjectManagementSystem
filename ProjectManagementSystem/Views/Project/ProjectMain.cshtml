@model ProjectViewModel

@{
    Layout = null;
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">

<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">

<link rel="stylesheet" href="~/css/UserView.css">

<aside class="sidebar">
    <h2>@Model.Project.ProjectName</h2>
    <ul>
        <li>Dashboard</li>
        <li>Task Board</li>
    </ul>
</aside>
<main class="content">
    <div class="header">
        <div class="create-btn">
            <button onclick="openSprintModal('@Model.Project.Id')">Create New Sprint</button>
            <button onclick="openTaskModal('@Model.Project.Id', '@Model.Project.TeamId')">Create New Task</button>
        </div>
        <div>
            <img src="https://i.pravatar.cc/40" alt="User" style="border-radius: 50%">
        </div>
    </div>
    <div class="overview">
        <div class="card">
            <h3>Sprints</h3>
            <p><strong>@Model.Project.Sprints.Count</strong></p>
            <small>0 Completed</small>
        </div>
        <div class="card">
            <h3>Tasks</h3>
            <p><strong>0</strong></p>
            <small>0 Completed</small>
        </div>
        <div class="card">
            <h3>Test</h3>
            <p><strong>Test</strong></p>
            <small>Test</small>
        </div>
    </div>
    <div class="projects-section">
        <h3>Sprints</h3>
        <table>
            <thead>
                <tr>
                    <th>Sprint Name</th>
                    <th>Start Date</th>
                    <th>Finish Date</th>
                    <th>Total Task</th>
                    <th>Progress</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Project.Sprints)
                {
                    <tr>
                        <td>@item.SprintName</td>
                        <td>@item.StartDate.ToString()</td>
                        <td>@item.FinishDate.ToString()</td>
                        <td>@item.Tasks.Count</td>
                        <td><div class="progress-bar"><div class="progress-fill" style="width: 0%"></div></div></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="projects-section">
        <h3>Tasks</h3>
        <table>
            <thead>
                <tr>
                    <th>Task Name</th>
                    <th>Task Description</th>
                    <th>Related Sprint</th>
                    <th>Assigned Employee</th>
                    <th>Task Priority</th>
                    <th>Task Status</th>
                </tr>
            </thead>
            <tbody>
                    @foreach (var sprint in Model.Project.Sprints)
                    {
                        @foreach (var item in sprint.Tasks)
                        {
                            <tr>
                                <td>@item.TaskName</td>
                                <td>@item.TaskDesc</td>
                                <td>@sprint.SprintName</td>
                                <td>@item.AppUser?.UserName</td>
                                <td>
                                    @if (@item.Priority.ToString() == "Low")
                                    {
                                        <span class="badge low">@item.Priority.ToString()</span>
                                    }
                                    else if (@item.Priority.ToString() == "Medium")
                                    {
                                        <span class="badge medium">@item.Priority.ToString()</span>
                                    }
                                    else
                                    {
                                        <span class="badge high">@item.Priority.ToString()</span>
                                    }
                                </td>
                                <td>@item.TaskEffort.ToString()</td>
                            </tr>
                        }
                    }                
            </tbody>
        </table>
    </div>

    <div id="sprintModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal('sprintModal', 'sprintActionContent')">&times;</span>
            <div id="sprintActionContent"> 
            </div>
        </div>
    </div>

    <div id="taskModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal('taskModal', 'taskActionContent')">&times;</span>
            <div id="taskActionContent"> 
            </div>
        </div>
    </div>

    <div class="modal fade" id="taskDetailModal" tabindex="-1" aria-labelledby="taskDetailModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content shadow-lg rounded-4">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="taskDetailModalLabel">Görev Detayları</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Kapat"></button>
                </div>
                <div id="taskDetailContainer">
                </div>
            </div>
        </div>
    </div>
</main>
<script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/notify/0.4.2/notify.min.js"></script>

<script>
    $(document).ready(function() {
        $('.js-example-basic-single').select2({
            width: '100%'
        });
        debugger;
        $(`#sprintActionContent`).html('');
        $(`#taskActionContent`).html('');
    });
    function openSprintModal(id){
        $.ajax({
                url: '/Project/CreateSprint',
                method: 'Get',   
                contentType: 'application/json',
                data: { projectId: id },
                success: function (response) {
                    $("#sprintActionContent").html(response);
                    document.getElementById('sprintModal').style.display='block';
                },
                error: function (xhr, status, error) {
                    $.notify("Error!", "error");
                }
        });
    }

    function openTaskModal(id, teamId){
        $.ajax({
                url: '/Project/CreateTask',
                method: 'Get',   
                contentType: 'application/json',
                data: { projectId: id, teamId: teamId},
                success: function (response) {
                    $("#taskActionContent").html(response);
                    document.getElementById('taskModal').style.display='block';
                },
                error: function (xhr, status, error) {
                    $.notify("Error!", "error");
                }
        });
    }

    const sModal = document.getElementById("sprintModal");
    const tModal = document.getElementById("taskModal");
    
    window.onclick = (e) => {
        if (e.target === sModal) sModal.style.display = "none";
        if (e.target === tModal) tModal.style.display = "none";
    };

    function closeModal(id, resetId) {
        document.getElementById(id).style.display = "none";
        $(`#${resetId}`).html('');
    }

    async function fetchSubTasks() {
        const desc = document.getElementById("taskDescInput").value;
        const btnSection = document.getElementById("aiRequestSection");
        const spinner = document.getElementById("spinnerSection");
        const results = document.getElementById("subtaskResults");
        const error = document.getElementById("aiError");

        results.innerHTML = "";
        error.classList.add("d-none");

        btnSection.classList.add("d-none");
        spinner.classList.remove("d-none");

        try {
            const response = await fetch("/SubTask/CreateByOllama", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ Description: desc })
            });

            const data = await response.json();
            spinner.classList.add("d-none");
            btnSection.classList.remove("d-none");

            if (!Array.isArray(data)) throw new Error("Invalid format");

            results.innerHTML = `<h5>AI Önerileri</h5>`;
            data.forEach(item => {
                results.innerHTML += `
                    <div class="card w-100 mb-3">
                        <div class="card-body">
                            <h6 class="card-title fw-bold">${item.title}</h6>
                            <p class="card-text">${item.description}</p>
                        </div>
                    </div>
                `;
            });
        } catch (err) {
            spinner.classList.add("d-none");
            btnSection.classList.remove("d-none");
            error.classList.remove("d-none");
        }
    }
</script>