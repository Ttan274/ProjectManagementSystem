@model ProjectViewModel

@{
    Layout = "_MainLayout";
}
<link rel="stylesheet" href="~/css/modal.css">
<main class="content">
    <div class="header">
        <div class="create-btn">
            <button onclick="openSprintModal('@Model.Project.Id')">Create New Sprint</button>
            <button onclick="openTaskModal('@Model.Project.Id', '@Model.Project.TeamId')">Create New Task</button>
        </div>
        <div>
            <img src="https://i.pravatar.cc/40" alt="User" style="border-radius: 50%">
        </div>
    </div>
    <div class="overview">
        <div class="card" onclick="setSprintsVisibility()">
            <h3>Sprints</h3>
            <p><strong>@Model.Project.Sprints.Count</strong></p>
            <small>0 Completed</small>
        </div>
        <div class="card" onclick="setTasksVisibility()">
            <h3>Tasks</h3>
            <p><strong>0</strong></p>
            <small>0 Completed</small>
        </div>
        <div class="card">
            <h3>Test</h3>
            <p><strong>Test</strong></p>
            <small>Test</small>
        </div>
    </div>
    <div class="projects-section" id="sprintsSection">
        <h3>Sprints</h3>
        <table>
            <thead>
                <tr>
                    <th>Sprint Name</th>
                    <th>Start Date</th>
                    <th>Finish Date</th>
                    <th>Total Task</th>
                    <th>Progress</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Project.Sprints)
                {
                    <tr>
                        <td>@item.SprintName</td>
                        <td>@item.StartDate.ToString()</td>
                        <td>@item.FinishDate.ToString()</td>
                        <td>@item.Tasks.Count</td>
                        <td><div class="progress-bar"><div class="progress-fill" style="width: 0%"></div></div></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="projects-section" id="tasksSection">
        <h3>Tasks</h3>
        <table>
            <thead>
                <tr>
                    <th>Task Name</th>
                    <th>Task Description</th>
                    <th>Related Sprint</th>
                    <th>Assigned Employee</th>
                    <th>Task Priority</th>
                    <th>Task Status</th>
                </tr>
            </thead>
            <tbody>
                    @foreach (var sprint in Model.Project.Sprints)
                    {
                        @foreach (var item in sprint.Tasks)
                        {
                            <tr>
                                <td>@item.TaskName</td>
                                <td>@item.TaskDesc</td>
                                <td>@sprint.SprintName</td>
                                <td>@item.AppUser?.UserName</td>
                                <td>
                                    @if (@item.Priority.ToString() == "Low")
                                    {
                                        <span class="badge low">@item.Priority.ToString()</span>
                                    }
                                    else if (@item.Priority.ToString() == "Medium")
                                    {
                                        <span class="badge medium">@item.Priority.ToString()</span>
                                    }
                                    else
                                    {
                                        <span class="badge high">@item.Priority.ToString()</span>
                                    }
                                </td>
                                <td>@item.TaskEffort.ToString()</td>
                            </tr>
                        }
                    }                
            </tbody>
        </table>
    </div>

    <div id="sprintModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal('sprintModal', 'sprintActionContent')">&times;</span>
            <h2>Create Sprint</h2>
            <div id="sprintActionContent">
            </div>
        </div>
    </div>

    <div id="taskModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal('taskModal', 'taskActionContent')">&times;</span>
            <h2>Create Task</h2>
            <div id="taskActionContent">
            </div>
        </div>
    </div>

    <div class="modal fade" id="taskDetailModal" tabindex="-1" aria-labelledby="taskDetailModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content shadow-lg rounded-4">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="taskDetailModalLabel">Görev Detayları</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Kapat"></button>
                </div>
                <div id="taskDetailContainer">
                </div>
            </div>
        </div>
    </div>
</main>
@Html.Hidden("ProjectId", Model.Project.Id)
<script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
<script>
    $(document).ready(function() {
        $('.js-example-basic-single').select2({
            width: '100%'
        });
        $(`#sprintActionContent`).html('');
        $(`#taskActionContent`).html('');
    });
    function openSprintModal(id){
        $.ajax({
                url: '/Project/CreateSprint',
                method: 'Get',   
                contentType: 'application/json',
                data: { projectId: id },
                success: function (response) {
                    $("#sprintActionContent").html(response);
                    document.getElementById('sprintModal').style.display='block';
                },
                error: function (xhr, status, error) {
                    $.notify("Error!", "error");
                }
        });
    }

    function openTaskModal(id, teamId){
        $.ajax({
                url: '/Project/CreateTask',
                method: 'Get',   
                contentType: 'application/json',
                data: { projectId: id, teamId: teamId},
                success: function (response) {
                    $("#taskActionContent").html(response);
                    document.getElementById('taskModal').style.display='block';
                },
                error: function (xhr, status, error) {
                    $.notify("Error!", "error");
                }
        });
    }

    function GoToBoard(id){
        $.ajax({
                url: '/Board/Index',
                method: 'Get',
                contentType: 'application/json',
                data: { projectId: id },
                success: function (response) {
                    $("#sprintActionContent").html(response);
                    document.getElementById('sprintModal').style.display='block';
                },
                error: function (xhr, status, error) {
                    $.notify("Error!", "error");
                }
        });
    }

    const sModal = document.getElementById("sprintModal");
    const tModal = document.getElementById("taskModal");
    
    window.onclick = (e) => {
        if (e.target === sModal) sModal.style.display = "none";
        if (e.target === tModal) tModal.style.display = "none";
    };

    function closeModal(id, resetId) {
        document.getElementById(id).style.display = "none";
        $(`#${resetId}`).html('');
    }
  
    function setSprintsVisibility() {
        const section = document.getElementById("sprintsSection");
        section.classList.toggle("hidden");
    }

    function setTasksVisibility() {
        const section = document.getElementById("tasksSection");
        section.classList.toggle("hidden");
    }
</script>