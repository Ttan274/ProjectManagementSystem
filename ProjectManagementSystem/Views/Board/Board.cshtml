@model ProjectManagementSystem.Models.Board.ProjectBoardViewModel
<link rel="stylesheet" href="~/css/customModelUi.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/taskModal.css" asp-append-version="true" />
<div class="project-board">
    <!-- Board Header -->
    <div class="board-header">
        <div class="project-info">
            <div class="d-flex align-items-center mb-3">
                <div style="width: 40px;height: 40px;" class="btn-primary rounded-2 d-flex align-items-center justify-content-center">
                    <i class="fas fa-fw fa-th-large text-white fs-5"></i>
                </div>
                <h3 class="ms-3 mb-0">@Model.ProjectName</h3>
            </div>
            <div class="project-meta">
                <span class="badge bg-primary">@Model.ProjectCode</span>
                <span class="text-muted">Son güncelleme: @DateTime.Now.ToString("dd MMM yyyy HH:mm")</span>
            </div>
        </div>
        <div class="board-actions d-flex align-items-center gap-3 flex-wrap p-3">
            <div>
                <button class="btn btn-primary d-flex align-items-center gap-2 px-4" onclick="openTaskModal()">
                    <i class="bi bi-plus-lg"></i>
                    <span>Create Task</span>
                </button>
            </div>
            <div class="flex-grow-1" style="min-width: 250px;">
                <select asp-for="SprintId" asp-items="Model.SprintList"
                        class="js-example-basic-single form-select w-100"
                        id="sprintSelect">
                </select>
            </div>
            <div>
                <div class="bg-white border rounded-pill px-4 py-2 text-muted small">
                    <i>@Model.SprintInterval</i>
                </div>
            </div>
        </div>

    </div>

    <!-- Board Columns -->
    <div class="board-columns" id="boardColumns">
        @foreach (var column in Model.Columns)
        {
            <div class="board-column" data-column-id="@column.StatusId">
                <div class="column-header">
                    <h5>@column.Title</h5>
                    <span class="badge bg-light text-dark">@column.Tasks.Count</span>
                </div>
                <div class="column-body" id="column-@column.StatusId">
                    @foreach (var task in column.Tasks)
                    {
                        <div class="task-card urgent" @*  @(task.IsUrgent ? "urgent" : "") *@
                             data-task-id="@task.Id"
                             draggable="true">
                            <div class="task-header">
                                <span class="task-id">@task.TaskCode</span>
                                <div class="task-priority @GetPriorityClass(task.Priority)"></div>
                            </div>
                            <h6 class="task-title">@task.Title</h6>

                            <!-- Subtask Progress -->
                            @if (task.Subtasks.Any())
                            {
                                <div class="subtask-progress">
                                    <div class="progress">
                                        <div class="progress-bar"
                                             role="progressbar"
                                             style="width: @task.SubtaskCompletionPercentage%"
                                             aria-valuenow="@task.SubtaskCompletionPercentage"
                                             aria-valuemin="0"
                                             aria-valuemax="100">
                                        </div>
                                    </div>
                                    <small class="text-muted">@task.CompletedSubtasks/@task.Subtasks.Count tamamlandı</small>
                                </div>
                            }

                            <div class="task-footer">
                                <div class="task-assignee">
                                    <select class="userSelect form-control js-example-basic-single" data-task-id="@task.Id">
                                        @foreach (var user in Model.UserList)
                                        {
                                            <option value="@user.Value" selected="@(user.Value == task.UserId?.ToString() ? "selected" : null)">
                                                @user.Text
                                            </option>
                                        }
                                    </select>
                                </div>
                                <div class="task-actions">
                                    <button class="btn btn-sm btn-link p-0 text-muted"
                                            title="Subtask Ekle"
                                            onclick="showAddSubtaskModal('@task.Id', '@task.Title')">
                                        <i class="bi bi-list-check"></i>
                                    </button>
                                    <button class="btn btn-sm btn-link p-0 text-muted"
                                            title="Show Details"
                                            onclick="openTaskModal('@task.Id')">
                                        <i class="bi bi-three-dots"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>

@functions {
    string GetPriorityClass(int priority)
    {
        return priority switch
        {
            1 => "priority-high",
            2 => "priority-medium",
            3 => "priority-low",
            _ => "priority-none"
        };
    }
}

<script>
    $(document).ready(function() {
        $('.js-example-basic-single').select2({
                width: 'resolve',
                minimumResultsForSearch: Infinity
            });

        doDragOperations()

        $('#sprintSelect').on('change', function () {
            var selectedSprintId = $(this).val();
            var projectId = '@Model.ProjectId';

            $.ajax({
                url: '@Url.Action("BoardRefresh", "Board")',
                type: 'GET',
                data: {
                    projectId: projectId,
                    sprintId: selectedSprintId
                },
                success: function (result) {
                    $('#board-content').html(result);
                },
                error: function () {
                    $('#board-content').html('<p>Veri yüklenemedi.</p>');
                }
            });
        });

        $('.userSelect').on('change', function () {
                const taskId = $(this).data('task-id');
                const userId = $(this).val();

                $.ajax({
                    url: "@Url.Action("AssignUser", "Board")",
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ taskId: taskId, userId: userId }),
                    success: function (res) {
                        console.log("Atama başarılı");
                    },
                    error: function (err) {
                        console.error("Hata:", err);
                    }
                });
            });
    });

    function openTaskModal(taskId) {
        var projectId = '@Model.ProjectId';
        var teamId = '@Model.TeamId';

        if (!taskId) {
            $('#taskModalLabel').text('Create Task');
        } else {
            $('#taskModalLabel').text('Update Task');
        }

        $.ajax({
            url: '/Project/TaskAction',
            method: 'GET',
            contentType: 'application/json',
            data: { projectId: projectId, teamId: teamId, taskId: taskId },
            success: function (response) {
                $("#taskActionContent").html(response);
                var myModal = new bootstrap.Modal(document.getElementById('taskModal'));
                myModal.show();
            },
            error: function (xhr, status, error) {
                $.notify("Error!", "error");
            }
        });
    }
</script>